// Code generated by protoc-gen-go.
// source: svc.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	svc.proto

It has these top-level messages:
	GetUserinfoRequest
	GetUserinfoResponse
	Userinfo
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// get userinfo by id
type GetUserinfoRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetUserinfoRequest) Reset()                    { *m = GetUserinfoRequest{} }
func (m *GetUserinfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserinfoRequest) ProtoMessage()               {}
func (*GetUserinfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetUserinfoRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// return userinfo
type GetUserinfoResponse struct {
	Userinfo *Userinfo `protobuf:"bytes,1,opt,name=userinfo" json:"userinfo,omitempty"`
	Err      string    `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *GetUserinfoResponse) Reset()                    { *m = GetUserinfoResponse{} }
func (m *GetUserinfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserinfoResponse) ProtoMessage()               {}
func (*GetUserinfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetUserinfoResponse) GetUserinfo() *Userinfo {
	if m != nil {
		return m.Userinfo
	}
	return nil
}

func (m *GetUserinfoResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

// userinfo definition
type Userinfo struct {
	Id             int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Username       string  `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Phone          string  `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	Sex            int64   `protobuf:"varint,4,opt,name=sex" json:"sex,omitempty"`
	Avatar         string  `protobuf:"bytes,5,opt,name=avatar" json:"avatar,omitempty"`
	Gouhao         int64   `protobuf:"varint,6,opt,name=gouhao" json:"gouhao,omitempty"`
	Birthday       int64   `protobuf:"varint,7,opt,name=birthday" json:"birthday,omitempty"`
	Avatars        string  `protobuf:"bytes,8,opt,name=avatars" json:"avatars,omitempty"`
	Signature      string  `protobuf:"bytes,9,opt,name=signature" json:"signature,omitempty"`
	Appfrom        string  `protobuf:"bytes,10,opt,name=appfrom" json:"appfrom,omitempty"`
	Appver         string  `protobuf:"bytes,11,opt,name=appver" json:"appver,omitempty"`
	BackgroudImage string  `protobuf:"bytes,12,opt,name=backgroud_image,json=backgroudImage" json:"backgroud_image,omitempty"`
	UpdateAppver   string  `protobuf:"bytes,13,opt,name=update_appver,json=updateAppver" json:"update_appver,omitempty"`
	Privacy        int64   `protobuf:"varint,14,opt,name=privacy" json:"privacy,omitempty"`
	LoadRecTags    int64   `protobuf:"varint,15,opt,name=loadRecTags" json:"loadRecTags,omitempty"`
	GamePower      int64   `protobuf:"varint,16,opt,name=game_power,json=gamePower" json:"game_power,omitempty"`
	Mark           int64   `protobuf:"varint,17,opt,name=mark" json:"mark,omitempty"`
	Level          int64   `protobuf:"varint,18,opt,name=level" json:"level,omitempty"`
	QuestionPhoto  string  `protobuf:"bytes,19,opt,name=question_photo,json=questionPhoto" json:"question_photo,omitempty"`
	Lan            string  `protobuf:"bytes,20,opt,name=lan" json:"lan,omitempty"`
	Notify         int64   `protobuf:"varint,21,opt,name=notify" json:"notify,omitempty"`
	BindGameIds    []int64 `protobuf:"varint,22,rep,packed,name=bindGameIds" json:"bindGameIds,omitempty"`
	UserPosition   string  `protobuf:"bytes,23,opt,name=userPosition" json:"userPosition,omitempty"`
	UserStatus     int64   `protobuf:"varint,24,opt,name=userStatus" json:"userStatus,omitempty"`
	ImToken        string  `protobuf:"bytes,25,opt,name=imToken" json:"imToken,omitempty"`
}

func (m *Userinfo) Reset()                    { *m = Userinfo{} }
func (m *Userinfo) String() string            { return proto.CompactTextString(m) }
func (*Userinfo) ProtoMessage()               {}
func (*Userinfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Userinfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Userinfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Userinfo) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Userinfo) GetSex() int64 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *Userinfo) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Userinfo) GetGouhao() int64 {
	if m != nil {
		return m.Gouhao
	}
	return 0
}

func (m *Userinfo) GetBirthday() int64 {
	if m != nil {
		return m.Birthday
	}
	return 0
}

func (m *Userinfo) GetAvatars() string {
	if m != nil {
		return m.Avatars
	}
	return ""
}

func (m *Userinfo) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *Userinfo) GetAppfrom() string {
	if m != nil {
		return m.Appfrom
	}
	return ""
}

func (m *Userinfo) GetAppver() string {
	if m != nil {
		return m.Appver
	}
	return ""
}

func (m *Userinfo) GetBackgroudImage() string {
	if m != nil {
		return m.BackgroudImage
	}
	return ""
}

func (m *Userinfo) GetUpdateAppver() string {
	if m != nil {
		return m.UpdateAppver
	}
	return ""
}

func (m *Userinfo) GetPrivacy() int64 {
	if m != nil {
		return m.Privacy
	}
	return 0
}

func (m *Userinfo) GetLoadRecTags() int64 {
	if m != nil {
		return m.LoadRecTags
	}
	return 0
}

func (m *Userinfo) GetGamePower() int64 {
	if m != nil {
		return m.GamePower
	}
	return 0
}

func (m *Userinfo) GetMark() int64 {
	if m != nil {
		return m.Mark
	}
	return 0
}

func (m *Userinfo) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Userinfo) GetQuestionPhoto() string {
	if m != nil {
		return m.QuestionPhoto
	}
	return ""
}

func (m *Userinfo) GetLan() string {
	if m != nil {
		return m.Lan
	}
	return ""
}

func (m *Userinfo) GetNotify() int64 {
	if m != nil {
		return m.Notify
	}
	return 0
}

func (m *Userinfo) GetBindGameIds() []int64 {
	if m != nil {
		return m.BindGameIds
	}
	return nil
}

func (m *Userinfo) GetUserPosition() string {
	if m != nil {
		return m.UserPosition
	}
	return ""
}

func (m *Userinfo) GetUserStatus() int64 {
	if m != nil {
		return m.UserStatus
	}
	return 0
}

func (m *Userinfo) GetImToken() string {
	if m != nil {
		return m.ImToken
	}
	return ""
}

func init() {
	proto.RegisterType((*GetUserinfoRequest)(nil), "pb.GetUserinfoRequest")
	proto.RegisterType((*GetUserinfoResponse)(nil), "pb.GetUserinfoResponse")
	proto.RegisterType((*Userinfo)(nil), "pb.Userinfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Usersvc service

type UsersvcClient interface {
	// get user basic information
	GetUserinfo(ctx context.Context, in *GetUserinfoRequest, opts ...grpc.CallOption) (*GetUserinfoResponse, error)
}

type usersvcClient struct {
	cc *grpc.ClientConn
}

func NewUsersvcClient(cc *grpc.ClientConn) UsersvcClient {
	return &usersvcClient{cc}
}

func (c *usersvcClient) GetUserinfo(ctx context.Context, in *GetUserinfoRequest, opts ...grpc.CallOption) (*GetUserinfoResponse, error) {
	out := new(GetUserinfoResponse)
	err := grpc.Invoke(ctx, "/pb.Usersvc/GetUserinfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Usersvc service

type UsersvcServer interface {
	// get user basic information
	GetUserinfo(context.Context, *GetUserinfoRequest) (*GetUserinfoResponse, error)
}

func RegisterUsersvcServer(s *grpc.Server, srv UsersvcServer) {
	s.RegisterService(&_Usersvc_serviceDesc, srv)
}

func _Usersvc_GetUserinfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserinfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersvcServer).GetUserinfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Usersvc/GetUserinfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersvcServer).GetUserinfo(ctx, req.(*GetUserinfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Usersvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Usersvc",
	HandlerType: (*UsersvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserinfo",
			Handler:    _Usersvc_GetUserinfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "svc.proto",
}

func init() { proto.RegisterFile("svc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 504 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x93, 0xcf, 0x72, 0x12, 0x41,
	0x10, 0xc6, 0x0d, 0x24, 0x01, 0x9a, 0x3f, 0x89, 0x9d, 0x48, 0xda, 0x94, 0x5a, 0x14, 0x6a, 0xc9,
	0x89, 0x43, 0x7c, 0x01, 0x3d, 0xa5, 0x52, 0x5e, 0x10, 0xe3, 0x99, 0x9a, 0x65, 0x87, 0x65, 0x0a,
	0x76, 0x67, 0x9c, 0x99, 0x5d, 0xe5, 0xcd, 0x7c, 0x3c, 0x6b, 0x7a, 0x16, 0x44, 0x73, 0xdb, 0xef,
	0xd7, 0xdf, 0x74, 0xf7, 0xce, 0x74, 0x43, 0xc7, 0x55, 0xcb, 0xa9, 0xb1, 0xda, 0x6b, 0x6c, 0x98,
	0x64, 0xfc, 0x0e, 0xf0, 0x5e, 0xfa, 0xef, 0x4e, 0x5a, 0x55, 0xac, 0xf4, 0x5c, 0xfe, 0x28, 0xa5,
	0xf3, 0x38, 0x80, 0x86, 0x4a, 0xe9, 0x64, 0x74, 0x32, 0x69, 0xce, 0x1b, 0x2a, 0x1d, 0x7f, 0x85,
	0xab, 0x7f, 0x5c, 0xce, 0xe8, 0xc2, 0x49, 0x9c, 0x40, 0xbb, 0xac, 0x19, 0x9b, 0xbb, 0x77, 0xbd,
	0xa9, 0x49, 0xa6, 0x07, 0xdf, 0x21, 0x8a, 0x97, 0xd0, 0x94, 0xd6, 0x52, 0x63, 0x74, 0x32, 0xe9,
	0xcc, 0xc3, 0xe7, 0xf8, 0xf7, 0x19, 0xb4, 0xf7, 0xc6, 0xff, 0xeb, 0xe1, 0x6d, 0x4c, 0x5c, 0x88,
	0x5c, 0xd6, 0x67, 0x0e, 0x1a, 0xaf, 0xe1, 0xcc, 0xac, 0x75, 0x21, 0xa9, 0xc9, 0x81, 0x28, 0x42,
	0x01, 0x27, 0x7f, 0xd1, 0x29, 0xa7, 0x08, 0x9f, 0x38, 0x84, 0x73, 0x51, 0x09, 0x2f, 0x2c, 0x9d,
	0xb1, 0xb1, 0x56, 0x81, 0x67, 0xba, 0x5c, 0x0b, 0x4d, 0xe7, 0x6c, 0xae, 0x55, 0xa8, 0x99, 0x28,
	0xeb, 0xd7, 0xa9, 0xd8, 0x51, 0x8b, 0x23, 0x07, 0x8d, 0x04, 0xad, 0x78, 0xda, 0x51, 0x9b, 0x93,
	0xed, 0x25, 0xbe, 0x82, 0x8e, 0x53, 0x59, 0x21, 0x7c, 0x69, 0x25, 0x75, 0x38, 0xf6, 0x17, 0xf0,
	0x39, 0x63, 0x56, 0x56, 0xe7, 0x04, 0xf5, 0xb9, 0x28, 0xb9, 0x3b, 0x63, 0x2a, 0x69, 0xa9, 0x5b,
	0x77, 0xc7, 0x0a, 0x3f, 0xc0, 0x45, 0x22, 0x96, 0x9b, 0xcc, 0xea, 0x32, 0x5d, 0xa8, 0x5c, 0x64,
	0x92, 0x7a, 0x6c, 0x18, 0x1c, 0xf0, 0x43, 0xa0, 0xf8, 0x16, 0xfa, 0xa5, 0x49, 0x85, 0x97, 0x8b,
	0x3a, 0x4f, 0x9f, 0x6d, 0xbd, 0x08, 0x3f, 0xc7, 0x6c, 0x04, 0x2d, 0x63, 0x55, 0x25, 0x96, 0x3b,
	0x1a, 0xf0, 0x2f, 0xed, 0x25, 0x8e, 0xa0, 0xbb, 0xd5, 0x22, 0x9d, 0xcb, 0xe5, 0xa3, 0xc8, 0x1c,
	0x5d, 0x70, 0xf4, 0x18, 0xe1, 0x6b, 0x80, 0x4c, 0xe4, 0x72, 0x61, 0xf4, 0x4f, 0x69, 0xe9, 0x92,
	0x0d, 0x9d, 0x40, 0x66, 0x01, 0x20, 0xc2, 0x69, 0x2e, 0xec, 0x86, 0x9e, 0x73, 0x80, 0xbf, 0xc3,
	0xd3, 0x6c, 0x65, 0x25, 0xb7, 0x84, 0x0c, 0xa3, 0xc0, 0xf7, 0x30, 0xe0, 0xa9, 0x52, 0xba, 0x58,
	0x98, 0xb5, 0xf6, 0x9a, 0xae, 0xb8, 0xd5, 0xfe, 0x9e, 0xce, 0x02, 0x0c, 0x2f, 0xb8, 0x15, 0x05,
	0x5d, 0xc7, 0x11, 0xd9, 0x8a, 0x22, 0xdc, 0x51, 0xa1, 0xbd, 0x5a, 0xed, 0xe8, 0x45, 0x7c, 0xa9,
	0xa8, 0x42, 0xef, 0x89, 0x2a, 0xd2, 0x7b, 0x91, 0xcb, 0x87, 0xd4, 0xd1, 0x70, 0xd4, 0x0c, 0xbd,
	0x1f, 0x21, 0x1c, 0x43, 0x2f, 0xcc, 0xcb, 0x4c, 0x3b, 0x15, 0x0a, 0xd0, 0x4d, 0x7d, 0x37, 0x47,
	0x0c, 0xdf, 0x00, 0x04, 0xfd, 0xcd, 0x0b, 0x5f, 0x3a, 0x22, 0xae, 0x70, 0x44, 0xc2, 0xdd, 0xa9,
	0xfc, 0x51, 0x6f, 0x64, 0x41, 0x2f, 0xe3, 0xdb, 0xd5, 0xf2, 0xee, 0x0b, 0xb4, 0xc2, 0xe4, 0xba,
	0x6a, 0x89, 0x9f, 0xa0, 0x7b, 0xb4, 0x18, 0x38, 0x0c, 0xe3, 0xff, 0x74, 0x9f, 0x6e, 0x6f, 0x9e,
	0xf0, 0xb8, 0x41, 0xe3, 0x67, 0xc9, 0x39, 0xef, 0xe2, 0xc7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x53, 0x33, 0xc8, 0x26, 0x98, 0x03, 0x00, 0x00,
}
